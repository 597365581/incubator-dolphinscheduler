<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.CommandMapper">
    <select id="getOneToRun" resultType="org.apache.dolphinscheduler.dao.entity.Command">
SELECT command.id, command.command_type, command.process_definition_id, command.command_param, command.task_depend_type, command.failure_strategy,
        command.warning_type, command.warning_group_id, command.schedule_time, command.start_time, command.executor_id, command.dependence, command.update_time,
        command.process_instance_priority, command.worker_group
FROM (
    SELECT *
    FROM t_ds_process_definition definition
    WHERE definition.release_state = 1
        AND definition.flag = 1
) definition_new, (
        SELECT process_definition_id, state
        FROM t_ds_process_instance instance, (
                SELECT MAX(id) AS max_id
                FROM t_ds_process_instance
                GROUP BY process_definition_id
           ) instance_maxid
         WHERE instance.id = instance_maxid.max_id
            AND instance.state IN (5, 6, 7, 9)
    ) instance_new, t_ds_command command
WHERE definition_new.id = command.process_definition_id
    AND (definition_new.is_parallel = 1
       OR (definition_new.is_parallel = 0
            AND (instance_new.process_definition_id = definition_new.id
                OR definition_new.id NOT IN (
                    SELECT DISTINCT process_definition_id
                    FROM t_ds_process_instance
                ))))
ORDER BY command.update_time ASC
LIMIT 1
    </select>
    <select id="countCommandState" resultType="org.apache.dolphinscheduler.dao.entity.CommandCount">
        select cmd.command_type as command_type, count(1) as count
        from t_ds_command cmd, t_ds_process_definition process
        where cmd.process_definition_id = process.id
        <if test="projectIdArray != null and projectIdArray.length != 0">
            and process.project_id in
            <foreach collection="projectIdArray" index="index" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <if test="startTime != null and endTime != null">
            and cmd.start_time <![CDATA[ >= ]]> #{startTime} and cmd.update_time <![CDATA[ <= ]]> #{endTime}
        </if>
        group by cmd.command_type
    </select>
    <select id="countNeedRunSerialCommandByProcessDefinitionId" resultType="int">
        select count(1) FROM t_ds_command cmd,t_ds_process_definition process where cmd.process_definition_id = process.id and process.is_parallel=0
        and process.id=#{processDefinitionId}
    </select>
</mapper>

